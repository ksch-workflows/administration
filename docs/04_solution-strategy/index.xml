<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solution strategy on Administration Architecture Documentation</title>
    <link>https://ksch-workflows.github.io/administration/04_solution-strategy/</link>
    <description>Recent content in Solution strategy on Administration Architecture Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    
	<atom:link href="https://ksch-workflows.github.io/administration/04_solution-strategy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Domain Driven Design</title>
      <link>https://ksch-workflows.github.io/administration/04_solution-strategy/ddd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ksch-workflows.github.io/administration/04_solution-strategy/ddd/</guid>
      <description>Object naming conventions Data bag In every software system there are actors and work materials which manifest in various layers of the software. In each layer there is a different focus for what needs to be done with the data.
 In the persitence layer it needs to be mapped to the database structure. In the domain layer there are business processes which are working on the data. In the user interface layer the data gets received.</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://ksch-workflows.github.io/administration/04_solution-strategy/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ksch-workflows.github.io/administration/04_solution-strategy/testing/</guid>
      <description>Rules of thumb  In general, write a test class for every class in the production code.  References TBD</description>
    </item>
    
  </channel>
</rss>